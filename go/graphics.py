import os
import glob
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


folder = "B:/"
csv_files = glob.glob(os.path.join(folder, "*.csv"))
print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(csv_files)}")

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
SAMPLE_RATE_HZ = 10_000_000  # 10 –ú–ì—Ü, –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å Go-–ø—Ä–æ–≥—Ä–∞–º–º–µ

def classify_file(file_name):
    file_name = file_name.lower()
    if "afc" in file_name:
        return "afc"
    if "fft" in file_name or "spectrum" in file_name:
        return "spectrum"
    if "envelope" in file_name:
        return "envelope"
    if "saft" in file_name:
        return "saft"
    if "time" in file_name or "filtered" in file_name:
        return "time"
    return "unknown"

def load_and_plot(file_path):
    file_name = os.path.basename(file_path)
    signal_type = classify_file(file_name)

    try:
        if signal_type in ["afc", "spectrum"]:
            df = pd.read_csv(file_path, header=None, names=["FrequencyHz", "Amplitude"])
            df = df.dropna()

            plt.figure(figsize=(12, 4))
            plt.plot(df["FrequencyHz"], df["Amplitude"], label=file_name)
            plt.title(f"{signal_type.upper()} from {file_name}")
            plt.xlabel("Frequency (Hz)")
            plt.ylabel("Amplitude")
            plt.grid(True)
            plt.legend()
            plt.tight_layout()
            plt.show()

        elif signal_type in ["time", "envelope", "saft"]:
            df = pd.read_csv(file_path, header=None, names=["value"])
            df = df.dropna()

            num_samples = len(df)
            time_seconds = np.arange(num_samples) / SAMPLE_RATE_HZ

            plt.figure(figsize=(12, 4))
            plt.plot(time_seconds, df["value"], label=file_name)
            plt.title(f"{signal_type.upper()} signal from {file_name}")
            plt.xlabel("Time (s)")
            plt.ylabel("Value")
            plt.grid(True)
            plt.legend()
            plt.tight_layout()
            plt.show()

        else:
            print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: {file_name}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ {file_name}: {e}")

# –û—Å–Ω–æ–≤–Ω–æ–π –≤—ã–∑–æ–≤
for file in sorted(csv_files):
    load_and_plot(file)

# –¢–∞–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–µ—Ä–≤—ã—Ö —Å—Ç—Ä–æ–∫
for file in sorted(csv_files):
    print(f"\nüìÑ –§–∞–π–ª: {os.path.basename(file)}")
    try:
        df = pd.read_csv(file, sep=',', header=None)
        display(df.head())
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏: {e}")
