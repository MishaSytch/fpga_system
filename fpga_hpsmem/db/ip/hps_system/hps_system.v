// hps_system.v

// Generated using ACDS version 17.0 595

`timescale 1 ps / 1 ps
module hps_system (
		input  wire        clk_clk,                           //                     clk.clk
		input  wire        onchip_memory2_0_reset1_reset,     // onchip_memory2_0_reset1.reset
		input  wire        onchip_memory2_0_reset1_reset_req, //                        .reset_req
		input  wire [10:0] onchip_memory2_0_s1_address,       //     onchip_memory2_0_s1.address
		input  wire        onchip_memory2_0_s1_clken,         //                        .clken
		input  wire        onchip_memory2_0_s1_chipselect,    //                        .chipselect
		input  wire        onchip_memory2_0_s1_write,         //                        .write
		output wire [15:0] onchip_memory2_0_s1_readdata,      //                        .readdata
		input  wire [15:0] onchip_memory2_0_s1_writedata,     //                        .writedata
		input  wire [1:0]  onchip_memory2_0_s1_byteenable     //                        .byteenable
	);

	hps_system_hps_0 #(
		.F2S_Width (0),
		.S2F_Width (0)
	) hps_0 (
		.h2f_mpu_eventi     (),        //    h2f_mpu_events.eventi
		.h2f_mpu_evento     (),        //                  .evento
		.h2f_mpu_standbywfe (),        //                  .standbywfe
		.h2f_mpu_standbywfi (),        //                  .standbywfi
		.mem_a              (),        //            memory.mem_a
		.mem_ba             (),        //                  .mem_ba
		.mem_ck             (),        //                  .mem_ck
		.mem_ck_n           (),        //                  .mem_ck_n
		.mem_cke            (),        //                  .mem_cke
		.mem_cs_n           (),        //                  .mem_cs_n
		.mem_ras_n          (),        //                  .mem_ras_n
		.mem_cas_n          (),        //                  .mem_cas_n
		.mem_we_n           (),        //                  .mem_we_n
		.mem_reset_n        (),        //                  .mem_reset_n
		.mem_dq             (),        //                  .mem_dq
		.mem_dqs            (),        //                  .mem_dqs
		.mem_dqs_n          (),        //                  .mem_dqs_n
		.mem_odt            (),        //                  .mem_odt
		.mem_dm             (),        //                  .mem_dm
		.oct_rzqin          (),        //                  .oct_rzqin
		.h2f_rst_n          (),        //         h2f_reset.reset_n
		.h2f_lw_axi_clk     (clk_clk), //  h2f_lw_axi_clock.clk
		.h2f_lw_AWID        (),        // h2f_lw_axi_master.awid
		.h2f_lw_AWADDR      (),        //                  .awaddr
		.h2f_lw_AWLEN       (),        //                  .awlen
		.h2f_lw_AWSIZE      (),        //                  .awsize
		.h2f_lw_AWBURST     (),        //                  .awburst
		.h2f_lw_AWLOCK      (),        //                  .awlock
		.h2f_lw_AWCACHE     (),        //                  .awcache
		.h2f_lw_AWPROT      (),        //                  .awprot
		.h2f_lw_AWVALID     (),        //                  .awvalid
		.h2f_lw_AWREADY     (),        //                  .awready
		.h2f_lw_WID         (),        //                  .wid
		.h2f_lw_WDATA       (),        //                  .wdata
		.h2f_lw_WSTRB       (),        //                  .wstrb
		.h2f_lw_WLAST       (),        //                  .wlast
		.h2f_lw_WVALID      (),        //                  .wvalid
		.h2f_lw_WREADY      (),        //                  .wready
		.h2f_lw_BID         (),        //                  .bid
		.h2f_lw_BRESP       (),        //                  .bresp
		.h2f_lw_BVALID      (),        //                  .bvalid
		.h2f_lw_BREADY      (),        //                  .bready
		.h2f_lw_ARID        (),        //                  .arid
		.h2f_lw_ARADDR      (),        //                  .araddr
		.h2f_lw_ARLEN       (),        //                  .arlen
		.h2f_lw_ARSIZE      (),        //                  .arsize
		.h2f_lw_ARBURST     (),        //                  .arburst
		.h2f_lw_ARLOCK      (),        //                  .arlock
		.h2f_lw_ARCACHE     (),        //                  .arcache
		.h2f_lw_ARPROT      (),        //                  .arprot
		.h2f_lw_ARVALID     (),        //                  .arvalid
		.h2f_lw_ARREADY     (),        //                  .arready
		.h2f_lw_RID         (),        //                  .rid
		.h2f_lw_RDATA       (),        //                  .rdata
		.h2f_lw_RRESP       (),        //                  .rresp
		.h2f_lw_RLAST       (),        //                  .rlast
		.h2f_lw_RVALID      (),        //                  .rvalid
		.h2f_lw_RREADY      ()         //                  .rready
	);

	hps_system_onchip_memory2_0 onchip_memory2_0 (
		.clk        (clk_clk),                           //   clk1.clk
		.address    (onchip_memory2_0_s1_address),       //     s1.address
		.clken      (onchip_memory2_0_s1_clken),         //       .clken
		.chipselect (onchip_memory2_0_s1_chipselect),    //       .chipselect
		.write      (onchip_memory2_0_s1_write),         //       .write
		.readdata   (onchip_memory2_0_s1_readdata),      //       .readdata
		.writedata  (onchip_memory2_0_s1_writedata),     //       .writedata
		.byteenable (onchip_memory2_0_s1_byteenable),    //       .byteenable
		.reset      (onchip_memory2_0_reset1_reset),     // reset1.reset
		.reset_req  (onchip_memory2_0_reset1_reset_req), //       .reset_req
		.freeze     (1'b0)                               // (terminated)
	);

endmodule
